plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'swyg'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'	// validation

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'	// sql 문 내부에 파라미터 넣어서 출력
	implementation 'com.drewnoakes:metadata-extractor:2.18.0'	// 사진에서 위도, 경도 추출 라이브러리
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'	// Swagger SpringDoc
	implementation 'org.springframework.boot:spring-boot-starter-mail'	// 이메일 라이브러리
	implementation group: 'com.google.firebase', name: 'firebase-admin', version: '8.1.0'	// fire-base

	// JJWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty "jasypt.encryptor.password", project.getProperty("jasypt.encryptor.password")	// jasypt 암호화키 받기
}

// QueryDSL
clean {
	delete file('src/main/generated')
}